name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows builds
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            arch: x64
            os: windows
          - platform: windows-latest
            target: i686-pc-windows-msvc
            arch: x86
            os: windows
          - platform: windows-latest
            target: aarch64-pc-windows-msvc
            arch: arm64
            os: windows

          # macOS builds
          - platform: macos-latest
            target: x86_64-apple-darwin
            arch: x64
            os: macos
          - platform: macos-latest
            target: aarch64-apple-darwin
            arch: arm64
            os: macos

          # Linux builds
          - platform: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            arch: x64
            os: linux
          - platform: ubuntu-24.04
            target: aarch64-unknown-linux-gnu
            arch: arm64
            os: linux
          - platform: ubuntu-24.04
            target: i686-unknown-linux-gnu
            arch: x86
            os: linux

    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          # Add universe repository for latest packages
          sudo add-apt-repository universe -y
          sudo apt-get update

          # Install base dependencies
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            pkg-config \
            libayatana-appindicator3-dev

          # Install cross-compilation tools for different architectures
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
            echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
            echo "CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++" >> $GITHUB_ENV
          elif [ "${{ matrix.arch }}" = "x86" ]; then
            sudo apt-get install -y gcc-multilib g++-multilib
            sudo apt-get install -y libgtk-3-dev:i386 || true
          fi

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
          key: ${{ matrix.target }}

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install frontend dependencies
        env:
          HUSKY: 0
        run: npm ci

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'InfloWave v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.target }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Create Release Notes
        run: |
          echo "## 馃殌 InfloWave Release" > release_notes.md
          echo "" >> release_notes.md
          echo "### 馃摝 Downloads" >> release_notes.md
          echo "" >> release_notes.md
          echo "- **Windows**: Download the \`.msi\` installer" >> release_notes.md
          echo "- **macOS**: Download the \`.dmg\` installer" >> release_notes.md
          echo "- **Linux**: Download the \`.deb\` or \`.AppImage\` package" >> release_notes.md
          echo "" >> release_notes.md
          echo "### 馃敡 Installation" >> release_notes.md
          echo "" >> release_notes.md
          echo "1. Download the appropriate installer for your platform" >> release_notes.md
          echo "2. Run the installer and follow the setup wizard" >> release_notes.md
          echo "3. Launch InfloWave from your applications" >> release_notes.md
          echo "" >> release_notes.md
          echo "### 馃搵 System Requirements" >> release_notes.md
          echo "" >> release_notes.md
          echo "- **Windows**: Windows 10 or later" >> release_notes.md
          echo "- **macOS**: macOS 10.13 or later" >> release_notes.md
          echo "- **Linux**: Modern Linux distribution with GTK 3.0+" >> release_notes.md


